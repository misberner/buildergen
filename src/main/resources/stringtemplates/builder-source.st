builder_source(spec) ::= <<
<header(spec)>

<package_decl(spec.packageName)>

<class_defn(spec)>
>>


header(spec) ::= <<
/*
 * Automatically generated by BuilderGen, https://github.com/misberner/buildergen.
 * DO NOT EDIT THIS FILE! Your changes will be overwritten.
 * Edit the @GenerateBuilder specification of class
 * <spec.instanceType>
 */
>>

package_decl(pkgName) ::= <<
<if(pkgName)>package <pkgName>;<endif>
>>

class_defn(spec) ::= <<
<if(spec.classPublic)>public <endif><if(spec.classFinal)>final <endif>class <spec.name><generic_params(spec)> {
	<spec.options:{opt | <option_defn(opt)>}; separator="\n">
	
	<ctor_defn(spec)>
	
	<create_dispatch_defn(spec)>
	
	<create_defn(spec)>
	
	<spec.options:{opt | <option_methods(opt, spec)> }; separator="\n\n">
	
}
>>

generic_params(spec) ::= <<
<if(spec.typeParameters)>\<
	<spec.typeParameters:{t |<type_parameter(t)>}; separator=",\n">
\><endif>
>>

type_parameter(t) ::= <<
<t><if(t.bounds)> extends <t.bounds; separator=" & "><endif>
>>

option_defn(opt) ::= <<
<opt.visibility><opt.type> <opt.name>;
>>

ctor_defn(spec) ::= <<
public <spec.name>() {
	<spec.options:{opt | <option_init(opt)>}; separator="\n">
}
>>

option_init(opt) ::= <<
<if(opt.defaultExpr)>this.<opt.name> = <opt.defaultExpr>;<endif>
>>

create_dispatch_defn(spec) ::= <<
private static<generic_params(spec)> <spec.instanceType; format="TypeMirror"> $createDispatch(
	<spec.options:{opt | <opt.type> <opt.name>}; separator=",\n">
	) {
	return <spec.createInvocation>(
		<spec.options:{opt | <opt.name>}; separator=",\n">
		);
}
>>

create_defn(spec) ::= <<
public <spec.instanceType; format="TypeMirror"> <spec.createName>() {
	return $createDispatch(
		<spec.options:{opt | this.<opt.name>}; separator=",\n">
		);
}
>>



option_methods(opt, spec) ::= <<
<getter(opt)>
<setter(opt)>
<with(opt, spec)>
>>

getter(opt) ::= <<
public <opt.type> <opt.getterName>() {
	return this.<opt.name>;
}
>>

setter(opt) ::= <<
public void <opt.setterName>(<opt.type> <opt.name>) {
	this.<opt.name> = <opt.name>;
}
>>

with(opt, spec) ::= <<
public <spec.name> <opt.withName>(<opt.type> <opt.name>) {
	this.<opt.name> = <opt.name>;
	return this;
}
>>
